import os
from common import taskmgr, samples

TASK_NAME = "Move results"
TASK_DESCRIPTION = """Move fastq files from demultiplexing into the standard
                    directory structure used by NSC."""
TASK_ARGS = ['work_dir', 'sample_sheet']


def move_files(bc_dir, projects):
    """Rename result files after demultiplexing. Work back from the desired
    structure represented by the projects list, to the current file names.
    
    It's done this way because we already have the code to create the projects
    list."""

    for project in projects:
        if not project.is_undetermined:
            projdir = os.path.join(bc_dir, project.proj_dir)
            if not os.path.exists(projdir):
                os.mkdir(projdir)

    no_sample_id_dir = all(
            sample.sample_id == sample.name 
            for project in projects for sample in project.samples
            if not project.is_undetermined
            )

    for project in projects:
        if not project.is_undetermined:
            for sample in project.samples:
                if sample.sample_dir:
                    sample_path = os.path.join(bc_dir, project.proj_dir, sample.sample_dir)
                    if not os.path.exists(sample_path):
                        os.mkdir(sample_path)

                for f in sample.files:
                    orig_fname = samples.bcl2fastq2_file_name(
                            sample.name,
                            sample.sample_index,
                            f.lane, 
                            f.i_read,
                            f.lane == "X"
                            )
                    if no_sample_id_dir:
                        orig_path = os.path.join(
                                bc_dir,
                                project.name,
                                orig_fname
                                )
                    else:
                        orig_path = os.path.join(
                                bc_dir,
                                project.name,
                                sample.sample_id,
                                orig_fname
                                )

                    new_path = os.path.join(bc_dir, f.path)
                    print "Moving", orig_path, "to", new_path
                    try:
                        os.rename(orig_path, new_path)
                    except OSError:
                        print "FAIL"
            
                # Remove sample dir (should now be empty)
                if not no_sample_id_dir:
                    os.rmdir("{base}/{project}/{sampleid}".format(
                        base=bc_dir,
                        project=project.name,
                        sampleid=sample.sample_id
                        ))

            # Remove project dir
            os.rmdir("{base}/{project}".format(
                base=bc_dir,
                project=project.name
                ))


def main(task):
    task.running()
    run_id = task.run_id
    work_dir = task.work_dir
    projects = task.projects

    # The projects tree has the desired paths to all the samples
    # We need to move the samples from the places actually generated by the demultiplexing
    # tool, to the paths given in the projects tree.
    move_files(task.bc_dir, projects)

    task.success_finish()


if __name__ == "__main__":
    with taskmgr.Task(TASK_NAME, TASK_DESCRIPTION, TASK_ARGS) as task:
        main(task)

